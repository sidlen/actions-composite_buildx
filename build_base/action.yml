name: 'pre_build'
description: 'Build base image'
author: 'sidlen'
inputs:
  image_name:
    description: 'Image name (short name)'
    required: true
  dockerfile:
    description: 'path to dockerfile relative to project directory'
    required: true
  dockerfile_target: 
    description: 'target in Dockerfile'
    required: false
  context:
    description: 'path to directory with build context relative to project directory'
    required: true
  docker_login:
    description: "user for docker registry"
    required: true
    default: ${{ vars.registry_user }}
  docker_password:
    description: 'token or password for docker login'
    required: true
    default: ${{ secrets.registry_token }}
  build_args:
    description: 'list args, with space separator'
    required: false
    default: BUILDKIT_INLINE_CACHE=1
  list_tags:
    description: "list of tags to create images"
    required: false
    default: ""

runs:
  using: 'composite'
  steps:
    - name: Set IMAGE_TAG and SERVER_URL
      shell: bash
      id: prepare
      run: |
        SERVER_URL="${{ github.server_url }}"
        echo "::set-output name=server_url::${SERVER_URL#https://}"
        IMAGE_FULL_NAME="${SERVER_URL#https://}/${{ github.repository }}/${{ inputs.image_name }}:${{ github.ref_name }}"
        echo "::set-output name=image_full_name::${IMAGE_FULL_NAME}"
        IFS=' ' read -r -a values <<< "${{ inputs.list_tags }}"
        LIST_FULL_IMAGE_TAGS=${IMAGE_FULL_NAME}
        LIST_CACHE="type=registry,ref=${IMAGE_FULL_NAME}"
        for value in "${values[@]}"; do
          LIST_FULL_IMAGE_TAGS="$LIST_FULL_IMAGE_TAGS,${SERVER_URL#https://}/${{ github.repository }}/${{ inputs.image_name }}:$value"
          LIST_CACHE+=$'\n'"type=registry,ref=${SERVER_URL#https://}/${{ github.repository }}/${{ inputs.image_name }}:$value"
        done
        echo "::set-output name=list_full_image_tags::${LIST_FULL_IMAGE_TAGS}"
        echo $LIST_CACHE >> "$GITEA_ENV"
        echo "::set-output name=list_cache::${LIST_CACHE}"

    - name: debug
      shell: bash
      run: |
        echo DEGUB
        echo "$GITEA_ENV"
        echo DEBUG_LIST
        echo "$LIST_CACHE"

    - name: Checkout
      uses: actions/checkout@v4.1.2

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3.6.1

    - name: Login to Docker Registry
      uses: docker/login-action@v3.1.0
      with:
        registry: ${{ steps.prepare.outputs.SERVER_URL }}
        username: ${{ inputs.docker_login }}
        password: ${{ inputs.docker_password}}

    - name: Build and push
      uses: docker/build-push-action@v5.3.0
      with:
        file: ${{ inputs.dockerfile }}
        context: ${{ inputs.context }}
        push: true
        tags: |
          ${{ steps.prepare.outputs.list_full_image_tags }}
        build-args: |
          ${{ inputs.build_args }}
        cache-from: |
          $LIST_CACHE
        target: ${{ inputs.dockerfile_target }}

outputs:
  server_url:
    description: "The server URL without protocol"
    value: ${{ steps.prepare.outputs.server_url }}
  image_full_name:
    description: "Full name of the built image"
    value: ${{ steps.prepare.outputs.SERVER_URL }}/${{ github.repository }}/${{ inputs.image_name }}:${{ github.ref_name }}
