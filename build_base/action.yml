name: 'pre_build'
description: 'Build base image'
author: 'sidlen'
inputs:
  image_name:
    description: 'Image name (short name)'
    required: true
  use_latest_tag:
    description: 'if true: set tag to latest'
    required: false
    default: 'false'
  dockerfile:
    description: 'path to dockerfile relative to project directory'
    required: true
  dockerfile_target: 
    description: 'target in Dockerfile'
    required: false
  context:
    description: 'path to directory with build context relative to project directory'
    required: true
  docker_login:
    description: "user for docker registry"
    required: true
    default: ${{ vars.registry_user }}
  docker_password:
    description: 'token or password for docker login'
    required: true
    default: ${{ secrets.registry_token }}
  build_args:
    description: 'list args, with space separator'
    required: false
    default: BUILDKIT_INLINE_CACHE=1
  dockerhub_login:
    description: 'dockerhub login'
    required: true
    default: ${{ vars.DOCKER_HUB_USER_NAME }}
  dockerhub_password:
    description: 'dockerhub password'
    required: true
    default: ${{ secrets.DOCKER_HUB_USER_PASSWORD }}

runs:
  using: 'composite'
  steps:
    - name: Set IMAGE_TAG and SERVER_URL
      shell: bash
      id: prepare
      run: |
        SERVER_URL="${{ gihub.server_url }}"
        REF_NAME="${{ github.ref }}"
        REF="${REF_NAME#refs/tags/}"
        if [ "${{ inputs.use_latest_tag }}" = "true" ]; then
          IMAGE_TAG="latest"
        else
          IMAGE_TAG="${REF#refs/heads/}"
        fi
        echo "::set-output name=IMAGE_TAG::${IMAGE_TAG}"
        echo "::set-output name=SERVER_URL::${SERVER_URL#https://}"
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker

    - name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ steps.prepare.outputs.SERVER_URL }}
        username: ${{ inputs.docker_login }}
        password: ${{ inputs.docker_password}}

    - name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub_login }}
        password: ${{ inputs.dockerhub_password }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        file: ${{ inputs.dockerfile }}
        context: ${{ inputs.context }}
        push: true
        tags: ${{ steps.prepare.outputs.SERVER_URL }}/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ steps.prepare.outputs.IMAGE_TAG }}
        build-args: ${{ inputs.build_args }}
        cache-from: type=registry,ref=${{ steps.prepare.outputs.SERVER_URL }}/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ steps.prepare.outputs.IMAGE_TAG }}
        target: ${{ inputs.dockerfile_target }}

outputs:
  image_tag: ${{ steps.prepare.outputs.IMAGE_TAG }}
  server_url: ${{ steps.prepare.outputs.SERVER_URL }}
  image_full_name: ${{ steps.prepare.outputs.SERVER_URL }}/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ steps.prepare.outputs.IMAGE_TAG }}